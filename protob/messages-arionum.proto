syntax = "proto2";
package hw.trezor.messages.arionum;

// Sugar for easier handling in Java
option java_package = "com.satoshilabs.trezor.lib.protobuf";
option java_outer_classname = "TrezorMessageArionum";

/**
 * Request: Address at the specified index
 * @start
 * @next ArionumAddress
 */
message ArionumGetAddress {
    repeated uint32 address_n = 1; // BIP-32 path. For compatibility with other wallets, must be m/44'/144'/index'
    optional bool show_display = 2; // Optionally show on display before sending the result
}

/**
 * Response: Address for the given index
 * @end
 */
message ArionumAddress {
    optional string address = 1; // Address in Arionum format (base58 of a pubkey with checksum)
}

/**
 * Request: Ask device to sign Arionum transaction
 * @start
 * @next ArionumSignedTx
 */
message ArionumSignTx {
    repeated uint32 address_n = 1; // BIP-32 path. For compatibility with other wallets, must be m/44'/144'/index'
    optional ArionumTransaction transaction = 2; // The Arionum transaction structure

    /**
     * Standard transaction type
     */
    message ArionumTransaction {
        optional float val = 1;
        optional float fee = 2;
        optional string dst = 3;
        optional string message = 4;
        optional uint64 version = 5;
        optional string public_key = 6;
        optional uint64 date = 7;

        /**
         * Type of Arionum transaction
         */
        enum ArionumTransactionType {
            Transfer = 1;
        }
    }
}

/**
 * Response: Signature for transaction
 * @end
 */
message ArionumSignedTx {
    optional bytes signature = 1;
}
